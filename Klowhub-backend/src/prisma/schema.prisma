generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  name        String
  lastName    String
  email       String   @unique
  password    String
  profile     Profile?
  avatarUrl   String? // URL del avatar en Cloudinary
  coursesSold Course[] @relation("CourseSeller")
  Shopping    Shop[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Profile {
  id          Int      @id @default(autoincrement())
  userId      Int      @unique
  user        User     @relation(fields: [userId], references: [id])
  description String?
  avatarUrl   String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Course {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  price       Float
  categoryId  Int
  category    Category @relation(fields: [categoryId], references: [id])
  thumbnail   String
  sellerId    Int
  seller      User     @relation("CourseSeller", fields: [sellerId], references: [id])
  modules     Module[]
  Shopping    Shop[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Module {
  id        Int      @id @default(autoincrement())
  title     String
  courseId  Int
  course    Course   @relation(fields: [courseId], references: [id])
  classes   Clase[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Clase {
  id          Int      @id @default(autoincrement())
  moduleId    Int
  module      Module   @relation(fields: [moduleId], references: [id])
  classNumber Int
  title       String
  videoUrl    String? // URL del video en Cloudinary
  thumbnail   String? // URL del thumbnail del video
  material    String? // URL del material adicional
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Shop {
  id          Int      @id @default(autoincrement())
  userId      Int
  courseId    Int
  user        User     @relation(fields: [userId], references: [id])
  course      Course   @relation(fields: [courseId], references: [id])
  purchasedAt DateTime @default(now())
}

model Category {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Course    Course[]
}
